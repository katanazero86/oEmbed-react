{"version":3,"sources":["sagas/index.js","store/actions/ActionTypes.js","store/reducers/testReducer.js","store/reducers/footerReducer.js","store/reducers/oEmbedReducer.js","store/reducers/index.js","component/CardComponent.js","App.js","store/actions/index.js","about/About.js","header/Header.js","footer/Footer.js","serviceWorker.js","index.js"],"names":["test","test2","getOembedContent","rootSaga","regenerator_default","a","wrap","_context","prev","next","alert","stop","_marked","_context2","_marked2","action","result","_context3","console","log","axios","get","requestURL","sent","delay","status","put","type","data","hasOwnProperty","t0","_marked3","_context4","takeEvery","_marked4","TEST","GET_FOOTER_MSG","SET_FOOTER_MSG","SET_OEMBED_CONTENT","GET_OEMBED_CONTENT","FAIL_OEMBED_CONTENT","initialState","storeTest","footerMsg","oEmbedContents","loading","error","reducers","combineReducers","state","arguments","length","undefined","types","Object","objectSpread","footerStore","payload","msg","oEmbedStore","toConsumableArray","push","withStyles","card","width","media","height","props","classes","useEffect","content","react_default","createElement","Card_default","className","CardActionArea_default","onClick","window","open","CardMedia_default","image","title","CardContent_default","keys","map","key","Typography_default","component","CardActions_default","Button_default","size","color","domainItems","value","label","youtubeEndPoint","instagramEndPoint","vimeoEndPoint","appReducer","connect","dispatch","actions","_useState","useState","_useState2","slicedToArray","selectDomain","setSelectDomain","_useState3","_useState4","searchText","setSearchText","_useReducer","useReducer","_useReducer2","searchOembed","event","endPoint","concat","style","padding","Grid_default","container","spacing","direction","justify","alignItems","item","xs","sm","display","TextField_default","select","variant","margin","onChange","target","option","MenuItem_default","e","autoFocus","fullWidth","onKeyUp","keyCode","IconButton_default","aria-label","index_es","textAlign","index","Paper_default","component_CardComponent","About","Component","withRouter","root","flexGrow","cursor","headerMsg","setHeaderMsg","AppBar_default","position","Toolbar_default","history","Footer","name","age","handleChange","persist","_this","setState","prevState","footerStoreChange","setFooterMsg","getFooterStore","getFooterMsg","top","bottom","this","id","textField","Boolean","location","hostname","match","sageMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","es","react_router_dom","header_Header","paddingBottom","react_router","path","exact","App","footer_Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e76fc9d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { put, delay, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* test() {\r\nalert('리덕스 사가');\r\n}\r\n\r\nfunction* test2() {\r\n    alert('리덕스 사가2');\r\n}\r\n\r\nfunction* getOembedContent(action) {\r\n    console.log(action);\r\n\r\n    try {\r\n        const result = yield axios.get(action.requestURL);\r\n        yield delay(1000);\r\n\r\n        if (result.status !== 200) {\r\n            console.log(result);\r\n            console.log('통신실패');\r\n            yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n\r\n        } else if (result.status === 200) {\r\n            if(result.data.hasOwnProperty('error')) {\r\n                console.log(result);\r\n                console.log('통신실패');\r\n                yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n            } else {\r\n                console.log(result);\r\n                console.log('통신성공');\r\n                yield put({type : 'SET_OEMBED_CONTENT',  result : result.data});\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n    }\r\n\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery('SET_FOOTER_MSG', test);\r\n    yield takeEvery('GET_FOOTER_MSG', test2);\r\n    yield takeEvery('GET_OEMBED_CONTENT', getOembedContent);\r\n}\r\n\r\n\r\n// put: 새 액션을 dispatch 합니다\r\n// delay: 작업을 지연시킵니다.\r\n// takeEvery: 특정 액션을 모니터링 하고, 발생하면 특정 함수를 발생시킵니다.\r\n\r\n","// 액션 정의\r\nexport const TEST = 'TEST';\r\n\r\nexport const GET_FOOTER_MSG = 'GET_FOOTER_MSG';\r\nexport const SET_FOOTER_MSG = 'SET_FOOTER_MSG';\r\n\r\nexport const SET_OEMBED_CONTENT = 'SET_OEMBED_CONTENT';\r\nexport const GET_OEMBED_CONTENT = 'GET_OEMBED_CONTENT';\r\nexport const FAIL_OEMBED_CONTENT = 'FAIL_OEMBED_CONTENT';\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    storeTest : '나는 스토어로 고통받는다'\r\n};\r\n\r\nexport default function test (state = initialState, action) {\r\n\r\n    switch (action.type){\r\n        case types.TEST :\r\n            return {\r\n                ...state,\r\n            }\r\n        default :\r\n            return initialState;\r\n    }\r\n}\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    footerMsg: '제작자 : phpbae'\r\n};\r\n\r\nexport default function footerStore(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.GET_FOOTER_MSG :\r\n            return {\r\n                ...state\r\n            }\r\n        case types.SET_FOOTER_MSG :\r\n            state.footerMsg = action.payload.msg;\r\n            return {\r\n                ...state\r\n            }\r\n        default :\r\n            return initialState;\r\n    }\r\n}\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    oEmbedContents: [],\r\n    loading : false,\r\n    error : false,\r\n    requestURL : '',\r\n};\r\n\r\nexport default function oEmbedStore(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.SET_OEMBED_CONTENT :\r\n            state.oEmbedContents = [...state.oEmbedContents];\r\n            state.oEmbedContents.push(action.result);\r\n            return {\r\n                oEmbedContents: [...state.oEmbedContents],\r\n                loading : false,\r\n                error : false,\r\n            }\r\n        case types.GET_OEMBED_CONTENT :\r\n            return {\r\n                oEmbedContents : [...state.oEmbedContents],\r\n                loading: true,\r\n                error: false,\r\n            }\r\n        case types.FAIL_OEMBED_CONTENT :\r\n            return {\r\n                oEmbedContents : [...state.oEmbedContents],\r\n                loading : false,\r\n                error : true,\r\n                requestURL: action.requestURL\r\n            }\r\n        default : {\r\n            return initialState;\r\n        }\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport test from './testReducer';\r\nimport footerStore from './footerReducer';\r\nimport oEmbedStore from './oEmbedReducer';\r\n\r\n// combineReducers : 분할 되어있는 리듀서 통합.\r\nconst reducers = combineReducers({\r\n    test, footerStore, oEmbedStore\r\n});\r\n\r\nexport default reducers;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    media: {\r\n        height: 240,\r\n    },\r\n};\r\n\r\nconst CardComponent = (props) => {\r\n\r\n    const classes = props.classes;\r\n\r\n    useEffect(() => {\r\n        console.log(props.content);\r\n    });\r\n\r\n    const cardActionClick = () => {\r\n        console.log(props.content['author_url']);\r\n        window.open(props.content['author_url'], '_blank');\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardActionArea onClick={cardActionClick}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.content['thumbnail_url']}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    {Object.keys(props.content).map(key => {\r\n                        if (key !== 'html') {\r\n                            return (\r\n                                <Typography component=\"p\">\r\n                                    {key} : {props.content[key]}\r\n                                </Typography>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                ''\r\n                            )\r\n                        }\r\n                    })}\r\n                    {/*<Typography component=\"p\">*/}\r\n                    {/*Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging*/}\r\n                    {/*across all continents except Antarctica*/}\r\n                    {/*</Typography>*/}\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nCardComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardComponent);\r\n","import React, {useState, useReducer} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Search} from '@material-ui/icons';\r\n\r\nimport CardComponent from './component/CardComponent';\r\n\r\n// import axios from 'axios';\r\n\r\n// state manage\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './store/actions';\r\n\r\n\r\nconst domainItems = [\r\n    {\r\n        value: 'youtube',\r\n        label: '유튜브',\r\n    },\r\n    {\r\n        value: 'instagram',\r\n        label: '인스타그램',\r\n    },\r\n    {\r\n        value: 'vimeo',\r\n        label: '비메오',\r\n    },\r\n];\r\n\r\n\r\nconst initialState = {\r\n    // youtubeEndPoint: 'https://www.youtube.com/oembed?url=',\r\n    youtubeEndPoint: 'http://noembed.com/embed?url=',\r\n    instagramEndPoint: 'https://api.instagram.com/oembed?url=',\r\n    vimeoEndPoint: 'https://vimeo.com/api/oembed.json?url=',\r\n};\r\n\r\nconst appReducer = (state, action) => {\r\n    switch (action.type) {\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    const [selectDomain, setSelectDomain] = useState('youtube');\r\n    const [searchText, setSearchText] = useState('');\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    const changeSelectDomain = (event) => {\r\n        dispatch({type: 'test'});\r\n        setSelectDomain(event.target.value);\r\n    };\r\n\r\n    const clickSearch = (event) => {\r\n        if (searchText) {\r\n            searchOembed();\r\n        }\r\n    };\r\n\r\n\r\n    const searchOembed = (event) => {\r\n\r\n        // https://www.youtube.com/watch?v=Ck7Ov6YxQPs&list=RDGMEMXdNDEg4wQ96My0DhjI-cIgVMk8e2PBUw45E&index=4\r\n        // https://vimeo.com/219312157\r\n        // https://www.instagram.com/p/BwifsZmJ_tD/\r\n\r\n\r\n        if (searchText) {\r\n            let endPoint = '';\r\n            switch (selectDomain) {\r\n                case 'youtube' :\r\n                    endPoint = `${state.youtubeEndPoint}${searchText}&format=json`;\r\n                    break;\r\n                case 'instagram':\r\n                    endPoint = `${state.instagramEndPoint}${searchText}`;\r\n                    break;\r\n                case 'vimeo' :\r\n                    endPoint = `${state.vimeoEndPoint}${searchText}`;\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n\r\n            if (endPoint) {\r\n                props.getOembedContent(endPoint);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{padding: '20px'}}>\r\n            <Grid container spacing={16} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\r\n                <Grid item xs={12}>\r\n\r\n                    <Grid spacing={16} container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <div style={{padding: '5px', display: 'flex', alignItems: 'center'}}>\r\n                                <TextField\r\n                                    select\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"검색 도메인 선택\"\r\n                                    value={selectDomain}\r\n                                    onChange={changeSelectDomain}\r\n                                    style={{width: '100%'}}\r\n                                >\r\n                                    {domainItems.map(option => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <div style={{padding: '5px', display: 'flex', alignItems: 'center'}}>\r\n                                <TextField\r\n                                    label=\"Search URL..\"\r\n                                    value={searchText}\r\n                                    onChange={(e) => setSearchText(e.target.value)}\r\n                                    autoFocus\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    onKeyUp={(e) => e.keyCode === 13 ? searchOembed() : ''}\r\n\r\n                                />\r\n                                <IconButton aria-label=\"Search\" onClick={clickSearch}>\r\n                                    <Search/>\r\n                                </IconButton>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        {props.loading\r\n                            ? <Grid item xs={12} style={{textAlign : 'center'}}>Loading...</Grid>\r\n                            : props.error\r\n                                ? <Grid item xs={12} style={{textAlign : 'center'}}>Error, try again({props.requestURL})</Grid>\r\n                                : ''\r\n                        }\r\n\r\n                        {props.oEmbedContents.map((content, index) => {\r\n                            return (\r\n                                <Grid item xs={12} sm={6} key={index}>\r\n                                    <Paper style={{padding: '10px'}}>\r\n                                        <CardComponent content={content}/>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n// store 안의 state 값을 props 로 연결\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.oEmbedStore\r\n    };\r\n};\r\n\r\n/*\r\n    액션 생성자를 사용하여 액션을 생성하고,\r\n    해당 액션을 dispatch 하는 함수를 만들은 후, 이를 props 로 연결해줍니다.\r\n*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getOembedContent: (requestURL) => {\r\n            dispatch(actions.getOembedContent(requestURL));\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as types from './ActionTypes';\r\n\r\nexport function test() {\r\n    return {\r\n        type: types.TEST\r\n    };\r\n}\r\n\r\n\r\nexport function getFooterMsg() {\r\n    return {\r\n        type: types.GET_FOOTER_MSG\r\n    }\r\n}\r\n\r\nexport function setFooterMsg(payload) {\r\n    return {\r\n        type: types.SET_FOOTER_MSG,\r\n        payload : payload\r\n    }\r\n}\r\n\r\n\r\nexport function setOembedContent(result) {\r\n    return {\r\n        type : types.SET_OEMBED_CONTENT,\r\n        result,\r\n    }\r\n}\r\n\r\nexport function getOembedContent(requestURL) {\r\n    return {\r\n        type : types.GET_OEMBED_CONTENT,\r\n        requestURL,\r\n    }\r\n}\r\n\r\nexport function failOembedContent(requestURL) {\r\n    return {\r\n        type : types.FAIL_OEMBED_CONTENT,\r\n        requestURL,\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './About.css';\r\n\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>제작자: 배님</h2>\r\n                <div style={{padding : '10px'}}>\r\n                    <table className=\"table-class\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>사용 기술</th>\r\n                            <th>비고</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>react</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>react router</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>redux</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>redux-saga</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>axios</td>\r\n                            <td>HTTP 통신 모듈</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>cross-env</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>@material-ui</td>\r\n                            <td>@material-ui/core, @material-ui/icons</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (About);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n        cursor: 'pointer'\r\n    },\r\n};\r\n\r\n// hooks 예제\r\nconst Header = (props) => {\r\n    const [headerMsg, setHeaderMsg] = useState('React 연습(Header 는 Hooks 로 작성)');\r\n\r\n    useEffect(() => {\r\n        console.log('렌더링이 완료되었습니다.(Header)');\r\n        console.log(headerMsg);\r\n    });\r\n\r\n    const onClickHandler = () => {\r\n        setHeaderMsg('');\r\n        props.history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={props.classes.root}>\r\n            <AppBar position=\"static\" color=\"primary\">\r\n                <Toolbar variant=\"dense\">\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={props.classes.flexGrow}\r\n                                onClick={onClickHandler}>\r\n                        {headerMsg}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" size=\"large\" onClick={() => {\r\n                        props.history.push('/about')\r\n                    }}>About</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Header));\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// state manage\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\n\r\nconst styles = {\r\n    textField: {\r\n        width: 200,\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        age: 100,\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        // this.setState({name: event.target.value});\r\n        console.log(event.target.value);\r\n        event.persist();\r\n        this.setState((prevState, props) => {\r\n           return {\r\n               name : event.target.value\r\n           }\r\n        });\r\n    };\r\n\r\n    footerStoreChange = () => {\r\n        this.props.setFooterMsg('setFooterMsg');\r\n    };\r\n\r\n    getFooterStore = () => {\r\n        this.props.getFooterMsg();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar position=\"absolute\" color=\"secondary\" style={{top : 'auto', bottom : '0px'}}>\r\n                    <Toolbar variant=\"dense\">\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={this.props.classes.flexGrow}>\r\n                            Footer - {this.props.footerMsg}\r\n                        </Typography>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"상태값 예제\"\r\n                            className={this.props.classes.textField}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                        />\r\n                        {this.state.name}\r\n                        <Button variant=\"contained\" onClick={this.footerStoreChange}>\r\n                            footerStore 값 변경\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.getFooterStore}>\r\n                            footerStore 값 가져오기\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// store 안의 state 값을 props 로 연결\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return {\r\n        footerMsg: state.footerStore.footerMsg,\r\n    };\r\n};\r\n\r\n/*\r\n    액션 생성자를 사용하여 액션을 생성하고,\r\n    해당 액션을 dispatch 하는 함수를 만들은 후, 이를 props 로 연결해줍니다.\r\n*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFooterMsg: () => {\r\n            dispatch(actions.getFooterMsg());\r\n        },\r\n        setFooterMsg: (msg) => {\r\n            dispatch(actions.setFooterMsg({msg}));\r\n        }\r\n    }\r\n};\r\n\r\nFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Footer)));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducers from './store/reducers'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport About from './about/About';\r\nimport Header from './header/Header';\r\nimport Footer from './footer/Footer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nconst sageMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducers, applyMiddleware(sageMiddleware));\r\nsageMiddleware.run(rootSaga);\r\n\r\n\r\nconst root = (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <div style={{position : 'relative'}}>\r\n                <Header/>\r\n                <div style={{paddingBottom : '72px'}}>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={App}/>\r\n                        <Route path=\"/about\" component={About}/>\r\n                    </Switch>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\n// ReactDOM.render(\r\n//     <Provider store={store}>\r\n//         <App/>\r\n//     </Provider>,\r\n//     document.getElementById('root')\r\n// );\r\n\r\nReactDOM.render(\r\n    root,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["sagas/index.js","store/actions/ActionTypes.js","store/reducers/testReducer.js","store/reducers/footerReducer.js","store/reducers/oEmbedReducer.js","store/reducers/index.js","component/CardComponent.js","store/actions/index.js","App.js","about/About.js","header/Header.js","footer/Footer.js","serviceWorker.js","index.js"],"names":["test","test2","getOembedContent","rootSaga","regenerator_default","a","wrap","_context","prev","next","alert","stop","_marked","_context2","_marked2","action","result","_context3","console","log","axios","get","requestURL","sent","delay","status","put","type","data","hasOwnProperty","t0","_marked3","_context4","takeEvery","_marked4","TEST","GET_FOOTER_MSG","SET_FOOTER_MSG","SET_OEMBED_CONTENT","GET_OEMBED_CONTENT","FAIL_OEMBED_CONTENT","DELETE_OEMBED_CONTENT","initialState","storeTest","footerMsg","oEmbedContents","loading","error","reducers","combineReducers","state","arguments","length","undefined","types","Object","objectSpread","footerStore","payload","msg","oEmbedStore","toConsumableArray","push","splice","itemIndex","withStyles","card","width","media","height","connect","dispatch","deleteCard","actions","props","classes","useEffect","content","react_default","createElement","Card_default","className","CardActionArea_default","onClick","window","open","CardMedia_default","image","title","CardContent_default","keys","map","key","Typography_default","component","CardActions_default","Button_default","size","color","domainItems","value","label","youtubeEndPoint","instagramEndPoint","vimeoEndPoint","appReducer","_useState","useState","_useState2","slicedToArray","selectDomain","setSelectDomain","_useState3","_useState4","searchText","setSearchText","_useReducer","useReducer","_useReducer2","searchOembed","event","endPoint","concat","style","padding","Grid_default","container","spacing","direction","justify","alignItems","item","xs","sm","display","TextField_default","select","variant","margin","onChange","target","option","MenuItem_default","e","autoFocus","fullWidth","onKeyUp","keyCode","IconButton_default","aria-label","index_es","textAlign","index","Paper_default","component_CardComponent","About","Component","withRouter","root","flexGrow","cursor","headerMsg","AppBar_default","position","Toolbar_default","history","Footer","name","age","handleChange","persist","_this","setState","prevState","footerStoreChange","setFooterMsg","getFooterStore","getFooterMsg","top","bottom","this","id","textField","Boolean","location","hostname","match","sageMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","es","react_router_dom","header_Header","paddingBottom","react_router","path","exact","App","footer_Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de0aa018.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { put, delay, takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* test() {\r\nalert('리덕스 사가');\r\n}\r\n\r\nfunction* test2() {\r\n    alert('리덕스 사가2');\r\n}\r\n\r\nfunction* getOembedContent(action) {\r\n    console.log(action);\r\n\r\n    try {\r\n        const result = yield axios.get(action.requestURL);\r\n        yield delay(1000);\r\n\r\n        if (result.status !== 200) {\r\n            console.log(result);\r\n            console.log('통신실패');\r\n            yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n\r\n        } else if (result.status === 200) {\r\n            if(result.data.hasOwnProperty('error')) {\r\n                console.log(result);\r\n                console.log('통신실패');\r\n                yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n            } else {\r\n                console.log(result);\r\n                console.log('통신성공');\r\n                yield put({type : 'SET_OEMBED_CONTENT',  result : result.data});\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        yield put({type: 'FAIL_OEMBED_CONTENT', requestURL : action.requestURL});\r\n    }\r\n\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery('SET_FOOTER_MSG', test);\r\n    yield takeEvery('GET_FOOTER_MSG', test2);\r\n    yield takeEvery('GET_OEMBED_CONTENT', getOembedContent);\r\n}\r\n\r\n\r\n// put: 새 액션을 dispatch 합니다\r\n// delay: 작업을 지연시킵니다.\r\n// takeEvery: 특정 액션을 모니터링 하고, 발생하면 특정 함수를 발생시킵니다.\r\n\r\n","// 액션 정의\r\nexport const TEST = 'TEST';\r\n\r\nexport const GET_FOOTER_MSG = 'GET_FOOTER_MSG';\r\nexport const SET_FOOTER_MSG = 'SET_FOOTER_MSG';\r\n\r\nexport const SET_OEMBED_CONTENT = 'SET_OEMBED_CONTENT';\r\nexport const GET_OEMBED_CONTENT = 'GET_OEMBED_CONTENT';\r\nexport const FAIL_OEMBED_CONTENT = 'FAIL_OEMBED_CONTENT';\r\n\r\nexport const DELETE_OEMBED_CONTENT = 'DELETE_OEMBED_CONTENT';\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    storeTest : '나는 스토어로 고통받는다'\r\n};\r\n\r\nexport default function test (state = initialState, action) {\r\n\r\n    switch (action.type){\r\n        case types.TEST :\r\n            return {\r\n                ...state,\r\n            }\r\n        default :\r\n            return initialState;\r\n    }\r\n}\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    footerMsg: '제작자 : phpbae'\r\n};\r\n\r\nexport default function footerStore(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.GET_FOOTER_MSG :\r\n            return {\r\n                ...state\r\n            }\r\n        case types.SET_FOOTER_MSG :\r\n            state.footerMsg = action.payload.msg;\r\n            return {\r\n                ...state\r\n            }\r\n        default :\r\n            return initialState;\r\n    }\r\n}\r\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    oEmbedContents: [],\r\n    loading : false,\r\n    error : false,\r\n    requestURL : '',\r\n};\r\n\r\nexport default function oEmbedStore(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.SET_OEMBED_CONTENT :\r\n            state.oEmbedContents = [...state.oEmbedContents];\r\n            state.oEmbedContents.push(action.result);\r\n            return {\r\n                oEmbedContents: [...state.oEmbedContents],\r\n                loading : false,\r\n                error : false,\r\n            }\r\n        case types.GET_OEMBED_CONTENT :\r\n            return {\r\n                oEmbedContents : [...state.oEmbedContents],\r\n                loading: true,\r\n                error: false,\r\n            }\r\n        case types.FAIL_OEMBED_CONTENT :\r\n            return {\r\n                oEmbedContents : [...state.oEmbedContents],\r\n                loading : false,\r\n                error : true,\r\n                requestURL: action.requestURL\r\n            }\r\n        case types.DELETE_OEMBED_CONTENT :\r\n            state.oEmbedContents.splice(action.itemIndex, 1);\r\n            return {\r\n                oEmbedContents : [...state.oEmbedContents],\r\n                loading: false,\r\n                error: false,\r\n            }\r\n        default : {\r\n            return initialState;\r\n        }\r\n    }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport test from './testReducer';\r\nimport footerStore from './footerReducer';\r\nimport oEmbedStore from './oEmbedReducer';\r\n\r\n// combineReducers : 분할 되어있는 리듀서 통합.\r\nconst reducers = combineReducers({\r\n    test, footerStore, oEmbedStore\r\n});\r\n\r\nexport default reducers;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// state manage\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    media: {\r\n        height: 240,\r\n    },\r\n};\r\n\r\nconst CardComponent = (props) => {\r\n\r\n    const classes = props.classes;\r\n\r\n    useEffect(() => {\r\n        console.log(props.content);\r\n        console.log(props.itemIndex);\r\n    });\r\n\r\n    const cardActionClick = () => {\r\n        console.log(props.content['author_url']);\r\n        window.open(props.content['author_url'], '_blank');\r\n    };\r\n\r\n    const cardDeleteClick = () => {\r\n      // console.log(props.itemIndex);\r\n      props.deleteCard(props.itemIndex);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardActionArea onClick={cardActionClick}>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.content['thumbnail_url']}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    {Object.keys(props.content).map(key => {\r\n                        if (key !== 'html') {\r\n                            return (\r\n                                <Typography component=\"p\">\r\n                                    {key} : {props.content[key]}\r\n                                </Typography>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                ''\r\n                            )\r\n                        }\r\n                    })}\r\n                    {/*<Typography component=\"p\">*/}\r\n                    {/*Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging*/}\r\n                    {/*across all continents except Antarctica*/}\r\n                    {/*</Typography>*/}\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" onClick={cardDeleteClick}>\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteCard: (itemIndex) => {\r\n            dispatch(actions.deleteOembedContent(itemIndex));\r\n        },\r\n    }\r\n};\r\n\r\n\r\nCardComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(CardComponent));\r\n","import * as types from './ActionTypes';\r\n\r\nexport function test() {\r\n    return {\r\n        type: types.TEST\r\n    };\r\n}\r\n\r\n\r\nexport function getFooterMsg() {\r\n    return {\r\n        type: types.GET_FOOTER_MSG\r\n    }\r\n}\r\n\r\nexport function setFooterMsg(payload) {\r\n    return {\r\n        type: types.SET_FOOTER_MSG,\r\n        payload : payload\r\n    }\r\n}\r\n\r\n\r\nexport function setOembedContent(result) {\r\n    return {\r\n        type : types.SET_OEMBED_CONTENT,\r\n        result,\r\n    }\r\n}\r\n\r\nexport function getOembedContent(requestURL) {\r\n    return {\r\n        type : types.GET_OEMBED_CONTENT,\r\n        requestURL,\r\n    }\r\n}\r\n\r\nexport function failOembedContent(requestURL) {\r\n    return {\r\n        type : types.FAIL_OEMBED_CONTENT,\r\n        requestURL,\r\n    }\r\n}\r\n\r\nexport function deleteOembedContent(itemIndex) {\r\n    return {\r\n        type : types.DELETE_OEMBED_CONTENT,\r\n        itemIndex,\r\n    }\r\n}\r\n","import React, {useState, useReducer} from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Search} from '@material-ui/icons';\r\n\r\nimport CardComponent from './component/CardComponent';\r\n\r\n// import axios from 'axios';\r\n\r\n// state manage\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './store/actions';\r\n\r\n\r\nconst domainItems = [\r\n    {\r\n        value: 'youtube',\r\n        label: '유튜브',\r\n    },\r\n    {\r\n        value: 'instagram',\r\n        label: '인스타그램',\r\n    },\r\n    {\r\n        value: 'vimeo',\r\n        label: '비메오',\r\n    },\r\n];\r\n\r\n\r\nconst initialState = {\r\n    // youtubeEndPoint: 'https://www.youtube.com/oembed?url=',\r\n    youtubeEndPoint: 'http://noembed.com/embed?url=',\r\n    instagramEndPoint: 'https://api.instagram.com/oembed?url=',\r\n    vimeoEndPoint: 'https://vimeo.com/api/oembed.json?url=',\r\n};\r\n\r\nconst appReducer = (state, action) => {\r\n    switch (action.type) {\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    const [selectDomain, setSelectDomain] = useState('youtube');\r\n    const [searchText, setSearchText] = useState('');\r\n    const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n    const changeSelectDomain = (event) => {\r\n        dispatch({type: 'test'});\r\n        setSelectDomain(event.target.value);\r\n    };\r\n\r\n    const clickSearch = (event) => {\r\n        if (searchText) {\r\n            searchOembed();\r\n        }\r\n    };\r\n\r\n\r\n    const searchOembed = (event) => {\r\n\r\n        // https://www.youtube.com/watch?v=Ck7Ov6YxQPs&list=RDGMEMXdNDEg4wQ96My0DhjI-cIgVMk8e2PBUw45E&index=4\r\n        // https://vimeo.com/219312157\r\n        // https://www.instagram.com/p/BwifsZmJ_tD/\r\n\r\n\r\n        if (searchText) {\r\n            let endPoint = '';\r\n            switch (selectDomain) {\r\n                case 'youtube' :\r\n                    endPoint = `${state.youtubeEndPoint}${searchText}&format=json`;\r\n                    break;\r\n                case 'instagram':\r\n                    endPoint = `${state.instagramEndPoint}${searchText}`;\r\n                    break;\r\n                case 'vimeo' :\r\n                    endPoint = `${state.vimeoEndPoint}${searchText}`;\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n\r\n            if (endPoint) {\r\n                props.getOembedContent(endPoint);\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{padding: '20px'}}>\r\n            <Grid container spacing={16} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\r\n                <Grid item xs={12}>\r\n\r\n                    <Grid spacing={16} container direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <div style={{padding: '5px', display: 'flex', alignItems: 'center'}}>\r\n                                <TextField\r\n                                    select\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"검색 도메인 선택\"\r\n                                    value={selectDomain}\r\n                                    onChange={changeSelectDomain}\r\n                                    style={{width: '100%'}}\r\n                                >\r\n                                    {domainItems.map(option => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <div style={{padding: '5px', display: 'flex', alignItems: 'center'}}>\r\n                                <TextField\r\n                                    label=\"Search URL..\"\r\n                                    value={searchText}\r\n                                    onChange={(e) => setSearchText(e.target.value)}\r\n                                    autoFocus\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    onKeyUp={(e) => e.keyCode === 13 ? searchOembed() : ''}\r\n\r\n                                />\r\n                                <IconButton aria-label=\"Search\" onClick={clickSearch}>\r\n                                    <Search/>\r\n                                </IconButton>\r\n                            </div>\r\n                        </Grid>\r\n\r\n                        {props.loading\r\n                            ? <Grid item xs={12} style={{textAlign : 'center'}}>Loading...</Grid>\r\n                            : props.error\r\n                                ? <Grid item xs={12} style={{textAlign : 'center'}}>Error, try again({props.requestURL})</Grid>\r\n                                : ''\r\n                        }\r\n\r\n                        {props.oEmbedContents.map((content, index) => {\r\n                            return (\r\n                                <Grid item xs={12} sm={6} key={index}>\r\n                                    <Paper style={{padding: '10px'}}>\r\n                                        <CardComponent content={content} itemIndex={index}/>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                        }\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n// store 안의 state 값을 props 로 연결\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.oEmbedStore\r\n    };\r\n};\r\n\r\n/*\r\n    액션 생성자를 사용하여 액션을 생성하고,\r\n    해당 액션을 dispatch 하는 함수를 만들은 후, 이를 props 로 연결해줍니다.\r\n*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getOembedContent: (requestURL) => {\r\n            dispatch(actions.getOembedContent(requestURL));\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React, {Component} from 'react';\r\n\r\nimport './About.css';\r\n\r\n\r\nclass About extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>제작자: 배님</h2>\r\n                <div style={{padding : '10px'}}>\r\n                    <table className=\"table-class\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>사용 기술</th>\r\n                            <th>비고</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>react</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>react router</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>redux</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>redux-saga</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>axios</td>\r\n                            <td>HTTP 통신 모듈</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>cross-env</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>@material-ui</td>\r\n                            <td>@material-ui/core, @material-ui/icons</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (About);\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n        cursor: 'pointer'\r\n    },\r\n};\r\n\r\n// hooks 예제\r\nconst Header = (props) => {\r\n    const [headerMsg, setHeaderMsg] = useState('React 연습(Header 는 Hooks 로 작성)');\r\n\r\n    useEffect(() => {\r\n        console.log('렌더링이 완료되었습니다.(Header)');\r\n        console.log(headerMsg);\r\n    });\r\n\r\n    const onClickHandler = () => {\r\n        // setHeaderMsg('');\r\n        props.history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className={props.classes.root}>\r\n            <AppBar position=\"static\" color=\"primary\">\r\n                <Toolbar variant=\"dense\">\r\n                    <Typography variant=\"h6\" color=\"inherit\" className={props.classes.flexGrow}\r\n                                onClick={onClickHandler}>\r\n                        {headerMsg}\r\n                    </Typography>\r\n                    <Button color=\"inherit\" size=\"large\" onClick={() => {\r\n                        props.history.push('/about')\r\n                    }}>About</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Header));\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// state manage\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions';\r\n\r\n\r\nconst styles = {\r\n    textField: {\r\n        width: 200,\r\n    },\r\n    flexGrow: {\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\n\r\nclass Footer extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        age: 100,\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        // this.setState({name: event.target.value});\r\n        console.log(event.target.value);\r\n        event.persist();\r\n        this.setState((prevState, props) => {\r\n           return {\r\n               name : event.target.value\r\n           }\r\n        });\r\n    };\r\n\r\n    footerStoreChange = () => {\r\n        this.props.setFooterMsg('setFooterMsg');\r\n    };\r\n\r\n    getFooterStore = () => {\r\n        this.props.getFooterMsg();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar position=\"absolute\" color=\"secondary\" style={{top : 'auto', bottom : '0px'}}>\r\n                    <Toolbar variant=\"dense\">\r\n                        <Typography variant=\"h6\" color=\"inherit\" className={this.props.classes.flexGrow}>\r\n                            Footer - {this.props.footerMsg}\r\n                        </Typography>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"상태값 예제\"\r\n                            className={this.props.classes.textField}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                            margin=\"normal\"\r\n                        />\r\n                        {this.state.name}\r\n                        <Button variant=\"contained\" onClick={this.footerStoreChange}>\r\n                            footerStore 값 변경\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.getFooterStore}>\r\n                            footerStore 값 가져오기\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// store 안의 state 값을 props 로 연결\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return {\r\n        footerMsg: state.footerStore.footerMsg,\r\n    };\r\n};\r\n\r\n/*\r\n    액션 생성자를 사용하여 액션을 생성하고,\r\n    해당 액션을 dispatch 하는 함수를 만들은 후, 이를 props 로 연결해줍니다.\r\n*/\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFooterMsg: () => {\r\n            dispatch(actions.getFooterMsg());\r\n        },\r\n        setFooterMsg: (msg) => {\r\n            dispatch(actions.setFooterMsg({msg}));\r\n        }\r\n    }\r\n};\r\n\r\nFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Footer)));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducers from './store/reducers'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport About from './about/About';\r\nimport Header from './header/Header';\r\nimport Footer from './footer/Footer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nconst sageMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducers, applyMiddleware(sageMiddleware));\r\nsageMiddleware.run(rootSaga);\r\n\r\n\r\nconst root = (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <div style={{position : 'relative'}}>\r\n                <Header/>\r\n                <div style={{paddingBottom : '72px'}}>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={App}/>\r\n                        <Route path=\"/about\" component={About}/>\r\n                    </Switch>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\n// ReactDOM.render(\r\n//     <Provider store={store}>\r\n//         <App/>\r\n//     </Provider>,\r\n//     document.getElementById('root')\r\n// );\r\n\r\nReactDOM.render(\r\n    root,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}